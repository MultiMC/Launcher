#include "BuildConfig.h"
#include <QObject>

const Config BuildConfig;

Config::Config()
{
    // Version information
    VERSION_MAJOR = @LAUNCHER_VERSION_MAJOR@;
    VERSION_MINOR = @LAUNCHER_VERSION_MINOR@;
    VERSION_HOTFIX = @LAUNCHER_VERSION_HOTFIX@;
    VERSION_BUILD = @LAUNCHER_VERSION_BUILD@;

    BUILD_PLATFORM = "@LAUNCHER_BUILD_PLATFORM@";
    CHANLIST_URL = "@LAUNCHER_CHANLIST_URL@";
    ANALYTICS_ID = "@LAUNCHER_ANALYTICS_ID@";
    NOTIFICATION_URL = "@LAUNCHER_NOTIFICATION_URL@";
    FULL_VERSION_STR = "@LAUNCHER_VERSION_MAJOR@.@LAUNCHER_VERSION_MINOR@.@LAUNCHER_VERSION_BUILD@";

    GIT_COMMIT = "@LAUNCHER_GIT_COMMIT@";
    GIT_REFSPEC = "@LAUNCHER_GIT_REFSPEC@";
    if(GIT_REFSPEC.startsWith("refs/heads/") && !CHANLIST_URL.isEmpty() && VERSION_BUILD >= 0)
    {
        VERSION_CHANNEL = GIT_REFSPEC;
        VERSION_CHANNEL.remove("refs/heads/");
        UPDATER_ENABLED = true;
    }
    else
    {
        VERSION_CHANNEL = QObject::tr("custom");
    }

    VERSION_STR = "@LAUNCHER_VERSION_STRING@";
    NEWS_RSS_URL = "@LAUNCHER_NEWS_RSS_URL@";
    PASTE_EE_KEY = "@LAUNCHER_PASTE_EE_API_KEY@";
    META_URL = "@LAUNCHER_META_URL@";
}

QString Config::printableVersionString() const
{
    QString vstr = QString("%1.%2.%3").arg(QString::number(VERSION_MAJOR), QString::number(VERSION_MINOR), QString::number(VERSION_HOTFIX));

    // If the build is not a main release, append the channel
    if(VERSION_CHANNEL != "stable")
    {
        vstr += "-" + VERSION_CHANNEL;
    }

    // if a build number is set, also add it to the end
    if(VERSION_BUILD >= 0)
    {
        vstr += "-" + QString::number(VERSION_BUILD);
    }
    return vstr;
}
